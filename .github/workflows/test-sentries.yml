name: Test Sentries

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    types: [ opened, synchronize, reopened ]
    branches: [ main, master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install pytest pytest-cov pytest-mock
      
      - name: Run smoke test
        run: |
          python scripts/smoke.py
      
      - name: Run unit tests
        run: |
          pytest sentries/ --cov=sentries --cov-report=xml
      
      - name: Test CLI installation
        run: |
          # Test that all CLI commands are properly installed
          testsentry --help
          docsentry --help
          sentries-cleanup --help
          sentries-status --help
          sentries-setup --help
          sentries-update-models --help
      
      - name: Test import functionality
        run: |
          python -c "
          from sentries import banner, chat, prompts, diff_utils, git_utils, runner_common
          from sentries import testsentry, docsentry, cleanup, status, setup_cli, update_models_cli
          print('All modules imported successfully')
          "
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: false

  integration-test:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      
      - name: Install dependencies
        run: |
          pip install -e .
          pip install pytest pytest-mock
      
      - name: Create test repository structure
        run: |
          # Create a mock repository structure to test sentries
          mkdir -p test-repo/tests test-repo/docs
          cd test-repo
          
          # Create a failing test
          cat > tests/test_example.py << 'EOF'
          def test_failing_function():
              assert 1 == 2  # This will fail
          
          def test_passing_function():
              assert 1 == 1  # This will pass
          EOF
          
          # Create a simple Python file
          cat > example.py << 'EOF'
          def example_function():
              return "Hello, World!"
          EOF
          
          # Initialize git
          git init
          git config user.name "Test User"
          git config user.email "test@example.com"
          git add .
          git commit -m "Initial commit with failing test"
          
          # Create a branch for testing
          git checkout -b test-branch
          
          # Modify a file to trigger doc updates
          echo "# Updated Documentation" > README.md
          git add README.md
          git commit -m "Update documentation"
          
          echo "Test repository created successfully"
      
      - name: Test sentries in mock environment
        run: |
          cd test-repo
          
          # Set environment variables for testing
          export GITHUB_REPOSITORY="test-org/test-repo"
          export GITHUB_REF="refs/heads/test-branch"
          
          # Test that sentries can be imported and run (without actual LLM calls)
          python -c "
          import sys
          sys.path.insert(0, '..')
          from sentries import testsentry, docsentry
          print('Sentries imported successfully in test environment')
          "
      
      - name: Cleanup test repository
        run: |
          rm -rf test-repo

  lint:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      
      - name: Install linting tools
        run: |
          pip install flake8 black isort mypy
      
      - name: Run flake8
        run: |
          flake8 sentries/ scripts/ --max-line-length=100 --extend-ignore=E203,W503
      
      - name: Run black check
        run: |
          black --check --diff sentries/ scripts/
      
      - name: Run isort check
        run: |
          isort --check-only --diff sentries/ scripts/
      
      - name: Run mypy
        run: |
          mypy sentries/ --ignore-missing-imports --no-strict-optional
