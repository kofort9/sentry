name: TestSentry Integration Test

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    types: [ opened, synchronize, reopened ]
    branches: [ main, master, develop ]

concurrency:
  group: sentry-${{ github.ref }}
  cancel-in-progress: false

jobs:
  # Pre-flight checks to determine if TestSentry should run
  check-prerequisites:
    runs-on: ubuntu-latest
    outputs:
      should-run: ${{ steps.check.outputs.should-run }}
      reason: ${{ steps.check.outputs.reason }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Check if TestSentry should run
        id: check
        run: |
          # Check if this is a PR with code changes
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            # Get changed files
            changed_files=$(git diff --name-only ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }})
            
            # Check if there are Python source files changed (excluding tests and docs)
            source_changes=$(echo "$changed_files" | grep -E '\.py$' | grep -v -E '(test_|_test\.py|tests/|docs/)' || true)
            
            if [ -n "$source_changes" ]; then
              echo "should-run=true" >> $GITHUB_OUTPUT
              echo "reason=Source code changes detected" >> $GITHUB_OUTPUT
              echo "✅ TestSentry should run - source code changes found"
            else
              echo "should-run=false" >> $GITHUB_OUTPUT
              echo "reason=No source code changes detected" >> $GITHUB_OUTPUT
              echo "⏭️  TestSentry skipped - no source code changes"
            fi
          else
            # For pushes to main branches, always run
            echo "should-run=true" >> $GITHUB_OUTPUT
            echo "reason=Push to main branch" >> $GITHUB_OUTPUT
            echo "✅ TestSentry should run - push to main branch"
          fi

  # Main TestSentry job - only runs if prerequisites are met
  test-sentry:
    runs-on: self-hosted
    needs: check-prerequisites
    if: needs.check-prerequisites.outputs.should-run == 'true'
    
    steps:
      - name: Check Ollama Status
        id: ollama-check
        run: |
          if curl -sSf http://127.0.0.1:11434/api/tags >/dev/null; then
            echo "status=ready" >> $GITHUB_OUTPUT
            echo "✅ Ollama is running and ready"
          else
            echo "status=not-ready" >> $GITHUB_OUTPUT
            echo "❌ Ollama is not running"
            echo "This job requires Ollama to be running on the self-hosted runner"
            exit 1
          fi
      
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      
      - name: Install Sentries
        run: |
          pip install -e .
      
      - name: Run TestSentry
        env:
          LLM_BASE: http://127.0.0.1:11434
          MODEL_PLAN: ${{ vars.MODEL_PLAN || 'llama3.1:8b-instruct-q4_K_M' }}
          MODEL_PATCH: ${{ vars.MODEL_PATCH || 'deepseek-coder:6.7b-instruct-q5_K_M' }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_REF: ${{ github.ref }}
          GITHUB_SHA: ${{ github.sha }}
        run: |
          testsentry
      
      - name: Success Summary
        if: success()
        run: |
          echo "🎉 TestSentry completed successfully!"
          echo "📋 Reason: ${{ needs.check-prerequisites.outputs.reason }}"
          echo "🔗 Check the PR for any test fixes created by TestSentry"

  # Fallback job for when prerequisites aren't met
  skip-notification:
    runs-on: ubuntu-latest
    needs: check-prerequisites
    if: needs.check-prerequisites.outputs.should-run == 'false'
    
    steps:
      - name: Skip Notification
        run: |
          echo "⏭️  TestSentry skipped"
          echo "📋 Reason: ${{ needs.check-prerequisites.outputs.reason }}"
          echo "💡 This is normal - TestSentry only runs when source code changes are detected"
          echo "🔧 To run TestSentry manually, create a PR with Python source code changes"
