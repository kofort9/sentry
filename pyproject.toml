[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "sentries"
version = "0.1.0"
description = "Automated test and documentation maintenance via local LLMs"
authors = [{name = "Sentries Team", email = "team@sentries.dev"}]
maintainers = [{name = "Sentries Team", email = "team@sentries.dev"}]
license = {text = "MIT"}
keywords = ["testing", "documentation", "automation", "llm", "ai", "ci-cd", "github-actions"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Testing",
    "Topic :: Software Development :: Documentation",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Quality Assurance",
]
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "requests>=2.31.0",
    "pyyaml>=6.0",
    "gitpython>=3.1.0",
]

[project.urls]
Homepage = "https://github.com/kofort9/sentries"
Documentation = "https://github.com/kofort9/sentries#readme"
Repository = "https://github.com/kofort9/sentries.git"
Issues = "https://github.com/kofort9/sentries/issues"

[project.optional-dependencies]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "flake8>=6.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
]
dev = [
    "sentries[test]",
    "pre-commit>=3.0.0",
    "tox>=4.0.0",
    "twine>=4.0.0",
    "build>=1.0.0",
]
all = [
    "sentries[test,dev]",
]

[project.scripts]
testsentry = "sentries.testsentry:main"
docsentry = "sentries.docsentry:main"
codesentry = "sentries.codesentry:main"
sentries-cleanup = "sentries.cleanup:main"
sentries-status = "sentries.status:main"
sentries-setup = "sentries.setup_cli:main"
sentries-update-models = "sentries.update_models_cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["sentries*"]

[tool.setuptools.package-data]
sentries = ["*.py"]

[tool.pytest.ini_options]
testpaths = ["sentries", "scripts"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=sentries",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]

[tool.coverage.run]
source = ["sentries"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 100
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
